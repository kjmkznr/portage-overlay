--- server/snd_worker.c.orig	2010-07-07 21:14:17.892744878 +0900
+++ server/snd_worker.c	2010-07-07 21:21:46.332775538 +0900
@@ -21,7 +21,7 @@
 #include <sys/socket.h>
 #include <netinet/ip.h>
 #include <netinet/tcp.h>
-#include <celt051/celt.h>
+#include <celt/celt.h>
 
 #include "spice.h"
 #include "red_common.h"
@@ -284,8 +284,8 @@
     size = packet->data_size;
 
     if (record_channel->mode == SPICE_AUDIO_DATA_MODE_CELT_0_5_1) {
-        int celt_err = celt051_decode(record_channel->celt_decoder, packet->data, size,
-                                      (celt_int16_t *)record_channel->celt_buf);
+        int celt_err = celt_decode(record_channel->celt_decoder, packet->data, size,
+                                      (celt_int16 *)record_channel->celt_buf);
         if (celt_err != CELT_OK) {
             red_printf("celt decode failed (%d)", celt_err);
             return FALSE;
@@ -635,7 +635,7 @@
     spice_marshall_msg_playback_data(channel->send_data.marshaller, &msg);
 
     if (playback_channel->mode == SPICE_AUDIO_DATA_MODE_CELT_0_5_1) {
-        int n = celt051_encode(playback_channel->celt_encoder, (celt_int16_t *)frame->samples, NULL,
+        int n = celt_encode(playback_channel->celt_encoder, (celt_int16 *)frame->samples, NULL,
                                playback_channel->send_data.celt_buf, CELT_COMPRESSED_FRAME_BYTES);
         if (n < 0) {
             red_printf("celt encode failed");
@@ -927,8 +927,8 @@
         reds_enable_mm_timer();
     }
 
-    celt051_encoder_destroy(playback_channel->celt_encoder);
-    celt051_mode_destroy(playback_channel->celt_mode);
+    celt_encoder_destroy(playback_channel->celt_encoder);
+    celt_mode_destroy(playback_channel->celt_mode);
 }
 
 static void snd_set_playback_peer(Channel *channel, RedsStreamContext *peer, int migration,
@@ -944,15 +944,14 @@
 
     snd_disconnect_channel(worker->connection);
 
-    if (!(celt_mode = celt051_mode_create(SPICE_INTERFACE_PLAYBACK_FREQ,
-                                          SPICE_INTERFACE_PLAYBACK_CHAN,
+    if (!(celt_mode = celt_mode_create(SPICE_INTERFACE_PLAYBACK_FREQ,
                                           FRAME_SIZE, &celt_error))) {
         red_printf("create celt mode failed %d", celt_error);
         return;
     }
 
-    if (!(celt_encoder = celt051_encoder_create(celt_mode))) {
-        red_printf("create celt encoder failed");
+    if (!(celt_encoder = celt_encoder_create(celt_mode,SPICE_INTERFACE_PLAYBACK_CHAN, &celt_error))) {
+        red_printf("create celt encoder failed %d", celt_error);
         goto error_1;
     }
 
@@ -986,10 +985,10 @@
     return;
 
 error_2:
-    celt051_encoder_destroy(celt_encoder);
+    celt_encoder_destroy(celt_encoder);
 
 error_1:
-    celt051_mode_destroy(celt_mode);
+    celt_mode_destroy(celt_mode);
 }
 
 static void snd_record_migrate(Channel *channel)
@@ -1093,8 +1092,8 @@
 {
     RecordChannel *record_channel = (RecordChannel *)channel;
 
-    celt051_decoder_destroy(record_channel->celt_decoder);
-    celt051_mode_destroy(record_channel->celt_mode);
+    celt_decoder_destroy(record_channel->celt_decoder);
+    celt_mode_destroy(record_channel->celt_mode);
 }
 
 static void snd_set_record_peer(Channel *channel, RedsStreamContext *peer, int migration,
@@ -1110,15 +1109,15 @@
 
     snd_disconnect_channel(worker->connection);
 
-    if (!(celt_mode = celt051_mode_create(SPICE_INTERFACE_RECORD_FREQ,
-                                          SPICE_INTERFACE_RECORD_CHAN,
+    if (!(celt_mode = celt_mode_create(SPICE_INTERFACE_RECORD_FREQ,
+                                          
                                           FRAME_SIZE, &celt_error))) {
         red_printf("create celt mode failed %d", celt_error);
         return;
     }
 
-    if (!(celt_decoder = celt051_decoder_create(celt_mode))) {
-        red_printf("create celt decoder failed");
+    if (!(celt_decoder = celt_decoder_create(celt_mode, SPICE_INTERFACE_RECORD_CHAN, &celt_error))) {
+        red_printf("create celt decoder failed %d", celt_error);
         goto error_1;
     }
 
@@ -1147,10 +1146,10 @@
     return;
 
 error_1:
-    celt051_decoder_destroy(celt_decoder);
+    celt_decoder_destroy(celt_decoder);
 
 error_2:
-    celt051_mode_destroy(celt_mode);
+    celt_mode_destroy(celt_mode);
 }
 
 static void snd_playback_migrate(Channel *channel)
--- client/playback_channel.cpp.orig	2010-07-08 07:25:57.115220383 +0900
+++ client/playback_channel.cpp	2010-07-08 07:28:27.412615176 +0900
@@ -174,11 +174,11 @@
     delete _wave_player;
 
     if (_celt_decoder) {
-        celt051_decoder_destroy(_celt_decoder);
+        celt_decoder_destroy(_celt_decoder);
     }
 
     if (_celt_mode) {
-        celt051_mode_destroy(_celt_mode);
+        celt_mode_destroy(_celt_mode);
     }
 }
 
@@ -263,13 +263,14 @@
             return;
         }
 
-        if (!(_celt_mode = celt051_mode_create(start->frequency, start->channels,
-                                               frame_size, &celt_mode_err))) {
+        if (!(_celt_mode = celt_mode_create(start->frequency, frame_size, 
+					&celt_mode_err))) {
             THROW("create celt mode failed %d", celt_mode_err);
         }
 
-        if (!(_celt_decoder = celt051_decoder_create(_celt_mode))) {
-            THROW("create celt decoder");
+        if (!(_celt_decoder = celt_decoder_create(_celt_mode, start->channels,
+					&celt_mode_err))) {
+            THROW("create celt decoder %d", celt_mode_err);
         }
     }
     _playing = true;
@@ -317,9 +318,9 @@
     SpiceMsgPlaybackPacket* packet = (SpiceMsgPlaybackPacket*)message->data();
     uint8_t* data = packet->data;
     uint32_t size = packet->data_size;
-    celt_int16_t pcm[256 * 2];
+    celt_int16 pcm[256 * 2];
 
-    if (celt051_decode(_celt_decoder, data, size, pcm) != CELT_OK) {
+    if (celt_decode(_celt_decoder, data, size, pcm) != CELT_OK) {
         THROW("celt decode failed");
     }
 #ifdef WAVE_CAPTURE
--- client/record_channel.cpp.orig	2010-07-08 07:29:22.604041782 +0900
+++ client/record_channel.cpp	2010-07-08 07:30:38.672821136 +0900
@@ -101,10 +101,10 @@
     delete _wave_recorder;
 
     if (_celt_encoder) {
-        celt051_encoder_destroy(_celt_encoder);
+        celt_encoder_destroy(_celt_encoder);
     }
     if (_celt_mode) {
-        celt051_mode_destroy(_celt_mode);
+        celt_mode_destroy(_celt_mode);
     }
 }
 
@@ -161,13 +161,14 @@
     int frame_size = 256;
     int celt_mode_err;
     _frame_bytes = frame_size * bits_per_sample * start->channels / 8;
-    if (!(_celt_mode = celt051_mode_create(start->frequency, start->channels, frame_size,
+    if (!(_celt_mode = celt_mode_create(start->frequency, frame_size,
                                            &celt_mode_err))) {
         THROW("create celt mode failed %d", celt_mode_err);
     }
 
-    if (!(_celt_encoder = celt051_encoder_create(_celt_mode))) {
-        THROW("create celt encoder failed");
+    if (!(_celt_encoder = celt_encoder_create(_celt_mode, start->channels,
+				           &celt_mode_err))) {
+        THROW("create celt encoder failed %d", celt_mode_err);
     }
 
     send_start_mark();
@@ -184,9 +185,9 @@
     }
     ASSERT(_celt_mode && _celt_encoder);
     _wave_recorder->stop();
-    celt051_encoder_destroy(_celt_encoder);
+    celt_encoder_destroy(_celt_encoder);
     _celt_encoder = NULL;
-    celt051_mode_destroy(_celt_mode);
+    celt_mode_destroy(_celt_mode);
     _celt_mode = NULL;
     delete _wave_recorder;
     _wave_recorder = NULL;
@@ -246,7 +247,7 @@
     int n;
 
     if (_mode == SPICE_AUDIO_DATA_MODE_CELT_0_5_1) {
-        n = celt051_encode(_celt_encoder, (celt_int16_t *)frame, NULL, celt_buf,
+        n = celt_encode(_celt_encoder, (celt_int16 *)frame, NULL, celt_buf,
                            CELT_COMPRESSED_FRAME_BYTES);
         if (n < 0) {
             THROW("celt encode failed");
--- client/audio_channels.h	2010-07-08 00:44:28.568863469 +0900
+++ client/audio_channels.h	2010-07-08 00:44:33.269159873 +0900
@@ -18,7 +18,7 @@
 #ifndef _H_AUDIO_CHANNELS
 #define _H_AUDIO_CHANNELS
 
-#include <celt051/celt.h>
+#include <celt/celt.h>
 
 #include "red_channel.h"
 #include "debug.h"
