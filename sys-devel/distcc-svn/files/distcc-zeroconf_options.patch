Index: src/zeroconf.c
===================================================================
--- src/zeroconf.c	(revision 711)
+++ src/zeroconf.c	(working copy)
@@ -77,6 +77,10 @@
     AvahiAddress address;
     uint16_t port;
     int n_cpus;
+    struct {
+        int cpp: 1;
+        int lzo: 1;
+    } options;
 
     AvahiServiceResolver *resolver;
 };
@@ -157,16 +161,23 @@
     remove_duplicate_services(d);
 
     for (h = d->hosts; h; h = h->next) {
-        char t[256], a[AVAHI_ADDRESS_STR_MAX];
+        char t[256], o[10], a[AVAHI_ADDRESS_STR_MAX];
 
         if (h->resolver)
             /* Not yet fully resolved */
             continue;
-	if (h->address.proto == AVAHI_PROTO_INET6)
-	    snprintf(t, sizeof(t), "[%s]:%u/%i\n", avahi_address_snprint(a, sizeof(a), &h->address), h->port, d->n_slots * h->n_cpus);
-	else
-	    snprintf(t, sizeof(t), "%s:%u/%i\n", avahi_address_snprint(a, sizeof(a), &h->address), h->port, d->n_slots * h->n_cpus);
 
+        o[0] = '\0';
+        if (h->options.cpp)
+            strncat(o, ",cpp", sizeof(o));
+        if (h->options.lzo)
+            strncat(o, ",lzo", sizeof(o));
+
+        if (h->address.proto == AVAHI_PROTO_INET6)
+            snprintf(t, sizeof(t), "[%s]:%u/%i%s\n", avahi_address_snprint(a, sizeof(a), &h->address), h->port, d->n_slots * h->n_cpus, o);
+        else
+            snprintf(t, sizeof(t), "%s:%u/%i%s\n", avahi_address_snprint(a, sizeof(a), &h->address), h->port, d->n_slots * h->n_cpus, o);
+
         if (dcc_writex(d->fd, t, strlen(t)) != 0) {
             rs_log_crit("write() failed: %s\n", strerror(errno));
             goto finish;
@@ -268,9 +279,15 @@
                 if (avahi_string_list_get_pair(i, &key, &value, NULL) < 0)
                     continue;
 
-                if (!strcmp(key, "cpus"))
+                if (!strcmp(key, "cpus")) {
                     if ((h->n_cpus = atoi(value)) <= 0)
                         h->n_cpus = 1;
+                } else if (!strcmp(key, "options")) {
+                    if (strstr(value, "cpp"))
+                        h->options.cpp = 1;
+                    if (strstr(value, "lzo"))
+                        h->options.lzo = 1;
+                }
 
                 avahi_free(key);
                 avahi_free(value);
@@ -350,6 +367,8 @@
                 h->protocol = protocol;
                 h->next = d->hosts;
                 h->n_cpus = 1;
+                h->options.cpp = 0;
+                h->options.lzo = 0;
                 d->hosts = h;
             }
 
Index: src/zeroconf-reg.c
===================================================================
--- src/zeroconf-reg.c	(revision 711)
+++ src/zeroconf-reg.c	(working copy)
@@ -95,6 +95,7 @@
                     cpus,
                     "distcc="PACKAGE_VERSION,
                     "gnuhost="GNU_HOST,
+                    "options=cpp,lzo",
                     v ? version : NULL,
                     m ? machine : NULL,
                     NULL) < 0) {
